apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'

version = '0.9.0'
jar.enabled = true
archivesBaseName = 'sip' 

task resolveDeps(type: Copy) {
    into('lib')
    from configurations.default
    from configurations.default.allArtifacts.file
}

repositories {
  mavenCentral()
  mavenLocal()
}


dependencies {	 
  // Servlet
  providedCompile 'javax.servlet:servlet-api:2.5@jar'

  // Mina
  providedCompile 'org.apache.mina:mina-core:2.0.15@jar'
  providedCompile 'org.apache.mina:mina-integration-beans:2.0.15@jar'
  providedCompile 'org.apache.mina:mina-integration-jmx:2.0.14@jar'
	
  // Spring 
  providedCompile 'org.springframework:spring-web:4.3.3.RELEASE@jar' 
  providedCompile  'org.springframework:spring-beans:4.3.3.RELEASE@jar'
  providedCompile 'org.springframework:spring-context:4.3.3.RELEASE@jar'
  providedCompile 'org.springframework:spring-core:4.3.3.RELEASE@jar'

  providedCompile 'org.red5:red5-server:1.0.8-M13@jar'
  providedCompile 'org.red5:red5-server-common:1.0.8-M13@jar'
  providedCompile 'org.red5:red5-io:1.0.8-M13@jar'
	  
  // Logging
  providedCompile 'ch.qos.logback:logback-core:1.1.7@jar'
  providedCompile 'ch.qos.logback:logback-classic:1.1.7@jar'
  providedCompile 'org.slf4j:log4j-over-slf4j:1.7.21@jar'
  providedCompile 'org.slf4j:jcl-over-slf4j:1.7.21@jar'
  providedCompile 'org.slf4j:jul-to-slf4j:1.7.21@jar'
  providedCompile 'org.slf4j:slf4j-api:1.7.21@jar'

  // Needed for the JVM shutdown hook but needs to be put into red5/lib dir.
  // Otherwise we get exception on aop utils class not found.
  providedCompile 'org.springframework:spring-aop:4.3.3.RELEASE@jar'
  compile 'aopalliance:aopalliance:1.0@jar'
	
  // Testing
  compile 'org.easymock:easymock:2.4@jar'
  
  // Testing
  testRuntime 'org.easymock:easymock:2.4@jar'
	    
  // Redis pubsub
  compile "redis.clients:jedis:2.1.0"
  compile 'commons-pool:commons-pool:1.5.6'
  compile 'com.google.code.gson:gson:2.5'
  
}

test {
    useTestNG()
}

war.doLast {
  ant.unzip(src: war.archivePath, dest: "$buildDir/sip")
}


task deploy() << {
	def red5AppsDir = '/usr/share/red5/webapps'
	def sipDir = new File("${red5AppsDir}/sip")
	println "Deleting $sipDir"
	if (sipDir.exists()) ant.delete(dir: sipDir)
	ant.mkdir(dir: sipDir)
	ant.copy(todir: sipDir) {
    	fileset(dir: "$buildDir/sip")
    }
} 

